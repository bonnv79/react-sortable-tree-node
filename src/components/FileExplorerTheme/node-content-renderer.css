.react-tree-node-content {
	/** * The outline of where the element will go if dropped, displayed while dragging */
	/** * Alternate appearance of the landing pad when the dragged location is invalid */
	/** * Nodes matching the search conditions are highlighted */
	/** * The node that matches the search conditions and is currently focused */
	/** * Line for under a node with children */
	/* ========================================================================== Scaffold Line-overlaid blocks used for showing the tree structure ========================================================================== */
	/* Highlight line for pointing to dragged row destination ========================================================================== */
	/** * +--+--+ * | | | * | | | * | | | * +--+--+ */
	/** * +-----+ * | | * | +--+ * | | | * +--+--+ */
	/** * +--+--+ * | | | * | | | * | +->| * +-----+ */
	/* icons */
}
 .react-tree-node-content .rowWrapper {
	 height: 100%;
	 box-sizing: border-box;
	 cursor: move;
}
 .react-tree-node-content .rowWrapper:hover {
	 opacity: 0.7;
	 background-color: #e8e8e8;
}
 .react-tree-node-content .rowWrapper:active {
	 opacity: 1;
}
 .react-tree-node-content .rowWrapperLandingPadActive:hover {
	 background-color: unset;
}
 .react-tree-node-content .rowWrapperDragDisabled {
	 cursor: default;
}
 .react-tree-node-content .row {
	 height: 100%;
	 white-space: nowrap;
	 display: flex;
	 position: relative;
}
 .react-tree-node-content .row > * {
	 box-sizing: border-box;
}
 .react-tree-node-content .rowSelected {
	 background-color: #d1efff;
}
 .react-tree-node-content .rowLandingPad, .react-tree-node-content .rowCancelPad {
	 border: none;
	 box-shadow: none;
	 outline: none;
}
 .react-tree-node-content .rowLandingPad *, .react-tree-node-content .rowCancelPad * {
	 opacity: 0 !important;
}
 .react-tree-node-content .rowLandingPad::before, .react-tree-node-content .rowCancelPad::before {
	 background-color: lightblue;
	 border: 2px dotted black;
	 content: '';
	 position: absolute;
	 top: 0;
	 right: 0;
	 bottom: 0;
	 left: 0;
	 z-index: -1;
}
 .react-tree-node-content .rowCancelPad::before {
	 background-color: #e6a8ad;
}
 .react-tree-node-content .rowSearchMatch {
	 box-shadow: inset 0 -7px 7px -3px #0080ff;
}
 .react-tree-node-content .rowSearchFocus {
	 box-shadow: inset 0 -7px 7px -3px #fc6421;
}
 .react-tree-node-content .rowContents, .react-tree-node-content .rowLabel, .react-tree-node-content .rowToolbar, .react-tree-node-content .toolbarButton {
	 display: inline-block;
	 vertical-align: middle;
}
 .react-tree-node-content .rowContents {
	 position: relative;
	 height: 100%;
	 flex: 1 0 auto;
	 display: flex;
	 align-items: center;
	 justify-content: space-between;
}
 .react-tree-node-content .rowLabel {
	 flex: 0 1 auto;
	 padding-right: 20px;
}
 .react-tree-node-content .rowToolbar {
	 flex: 0 1 auto;
	 display: flex;
}
 .react-tree-node-content .toolbarButton {
	 display: flex;
	 align-items: center;
}
 .react-tree-node-content .lineChildren {
	 height: 100%;
	 display: inline-block;
}
 .react-tree-node-content .lineBlock, .react-tree-node-content .absoluteLineBlock {
	 height: 100%;
	 position: relative;
	 display: inline-block;
	 flex: 0 0 auto;
}
 .react-tree-node-content .absoluteLineBlock {
	 position: absolute;
	 top: 0;
}
 .react-tree-node-content .highlightLineVertical {
	 z-index: 3;
}
 .react-tree-node-content .highlightLineVertical::before {
	 position: absolute;
	 content: '';
	 background-color: #36c2f6;
	 width: 6px;
	 margin-left: -3px;
	 left: 50%;
	 top: 0;
	 height: 100%;
}
 @keyframes arrow-pulse {
	 0% {
		 transform: translate(0, 0);
		 opacity: 0;
	}
	 30% {
		 transform: translate(0, 300%);
		 opacity: 1;
	}
	 70% {
		 transform: translate(0, 700%);
		 opacity: 1;
	}
	 100% {
		 transform: translate(0, 1000%);
		 opacity: 0;
	}
}
 .react-tree-node-content .highlightLineVertical::after {
	 content: '';
	 position: absolute;
	 height: 0;
	 margin-left: -3px;
	 left: 50%;
	 top: 0;
	 border-left: 3px solid transparent;
	 border-right: 3px solid transparent;
	 border-top: 3px solid white;
	 animation: arrow-pulse 1s infinite linear both;
}
 .react-tree-node-content .highlightTopLeftCorner::before {
	 z-index: 3;
	 content: '';
	 position: absolute;
	 border-top: solid 6px #36c2f6;
	 border-left: solid 6px #36c2f6;
	 box-sizing: border-box;
	 height: calc(50% + 3px);
	 top: 50%;
	 margin-top: -3px;
	 right: 0;
	 width: calc(50% + 3px);
}
 .react-tree-node-content .highlightBottomLeftCorner {
	 z-index: 3;
}
 .react-tree-node-content .highlightBottomLeftCorner::before {
	 content: '';
	 position: absolute;
	 border-bottom: solid 6px #36c2f6;
	 border-left: solid 6px #36c2f6;
	 box-sizing: border-box;
	 height: calc(100% + 3px);
	 top: 0;
	 right: 7px;
	 width: calc(50% - 4px);
}
 .react-tree-node-content .highlightBottomLeftCorner::after {
	 content: '';
	 position: absolute;
	 height: 0;
	 right: 0;
	 top: 100%;
	 margin-top: -7px;
	 border-top: 7px solid transparent;
	 border-bottom: 7px solid transparent;
	 border-left: 7px solid #36c2f6;
}
 .react-tree-node-content .arrowContainer {
	 position: absolute;
	 top: 50%;
	 left: -8px;
	 transform: translate(-100%, -50%);
	 display: flex;
	 align-items: center;
	 cursor: pointer;
}
 .react-tree-node-content .arrow {
	 border: solid black;
	 border-width: 0 3px 3px 0;
	 display: inline-block;
	 padding: 3px;
}
 .react-tree-node-content .right {
	 transform: rotate(-45deg);
	 -webkit-transform: rotate(-45deg);
}
 .react-tree-node-content .down {
	 transform: rotate(45deg);
	 -webkit-transform: rotate(45deg);
}
 